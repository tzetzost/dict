@startuml
!theme mars
'!theme sunlust
'!theme sketchy-outline
'!theme carbon-gray
'!theme vibrant

'skinparam componentStyle rectangle

interface "Payments API" as PayAPI


node "=Payment Gateway" {

  component APIService #lightgreen [
    ==API service
    ====
    create payments
  ]

component DAOModule [
    ===DAO module for [Payment Repo]
    ====
    DB schema & migrations
    entities
    repositories
  ]

  component BatchService #lightblue[
    =Payment Submitter
    ====
    scheduled cron job
    updating payment states
  ]

  PayAPI - APIService : provides
  APIService ..>  DAOModule  : use
  BatchService ..>  DAOModule  : use
}

database "=PostgreSQL" as DB {
  node {
    [Payment Repo]
  }
}

node "=IATA"{
  interface "IFG API" as IFGAPI
  [IATA Financial gateway] as IATAIFG
  IATAIFG - IFGAPI
}

agent "==OOM orchestrator\n====authorize\n====submit" as payevent

payevent --> PayAPI : JSON messages

note right of APIService
  ====service instance
end note

note right of BatchService
  ====service instance
end note

note right of DAOModule
  ====JAR module
end note

BatchService <-[thickness=3,#blue]- [Payment Repo] : ====Get pending payments
BatchService -[thickness=3,#blue]-> [Payment Repo] : ====Update payment state
APIService -[thickness=3,#green]-> [Payment Repo] : ====Insert payment authorization
APIService <-[thickness=3,#green]-> [Payment Repo] : ====Update for submission

APIService -[thickness=3,#green]-> IFGAPI : paymentAuthorize - API 1
BatchService -[thickness=3,#blue]-> IFGAPI : order - API 2

@enduml
